version=pmwiki-2.2.51 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0
author=admin
charset=UTF-8
csum=
ctime=1369684831
host=127.0.0.1
name=Main.TestPowerTools
rev=1
targets=
text=Test for the bundled cookbook recipe [[http://www.pmwiki.org/wiki/Cookbook/PowerTools]]%0a%0a(:markup:)%0a{(plist Cookbook.* -Cookbook.*Skin*)}  - pagelist of all pages in group Cookbook less any page which contains 'Skin' in its name. %0a(:markupend:)%0a----%0a%0a(:markup:)%0a{(pagelist group=Main)} - list of pages in group Main%0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(pagecount (plist Main.*))} number of pages in Maingroup.%0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(wordcount)} - number of words on current page.%0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(wordcount (plist Main.*))} - number of words of all pages in the Maingroup.%0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(wordcount "this is a string")} - number of words in string "this is a string" (4). %0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(serialname Group Name)} - Creates a new serial pagename of format Group.Name0001 (appended 4-digit number defined by variable $SerialStart), incrementing the ending number part of pages like Group.Name1234. So if you got a page Group.Name0010 the markup expression will return Group.Name0011. If Name is omitted it will create a purely numeric page name. If Group is omitted it will act in the current group.%0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(allptvs PAGE|PAGELIST)} - show all PTVs as name: value. Input argument: PageName or comma-separated list of pagenames, for instance using (plist) or (pagelist) expressions.%0a(:markupend:)%0a%0a----%0a(:markup:)%0a{(random "one","two","three","four","four","four",five")} - returns item selected at random from comma-separated list provided. Doubles are prevented.%0a(:markupend:)
time=1369684831
author:1369684831=admin
diff:1369684831:1369684831:=1,45d0%0a%3c Test for the bundled cookbook recipe [[http://www.pmwiki.org/wiki/Cookbook/PowerTools]]%0a%3c %0a%3c (:markup:)%0a%3c {(plist Cookbook.* -Cookbook.*Skin*)}  - pagelist of all pages in group Cookbook less any page which contains 'Skin' in its name. %0a%3c (:markupend:)%0a%3c ----%0a%3c %0a%3c (:markup:)%0a%3c {(pagelist group=Main)} - list of pages in group Main%0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(pagecount (plist Main.*))} number of pages in Maingroup.%0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(wordcount)} - number of words on current page.%0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(wordcount (plist Main.*))} - number of words of all pages in the Maingroup.%0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(wordcount "this is a string")} - number of words in string "this is a string" (4). %0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(serialname Group Name)} - Creates a new serial pagename of format Group.Name0001 (appended 4-digit number defined by variable $SerialStart), incrementing the ending number part of pages like Group.Name1234. So if you got a page Group.Name0010 the markup expression will return Group.Name0011. If Name is omitted it will create a purely numeric page name. If Group is omitted it will act in the current group.%0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(allptvs PAGE|PAGELIST)} - show all PTVs as name: value. Input argument: PageName or comma-separated list of pagenames, for instance using (plist) or (pagelist) expressions.%0a%3c (:markupend:)%0a%3c %0a%3c ----%0a%3c (:markup:)%0a%3c {(random "one","two","three","four","four","four",five")} - returns item selected at random from comma-separated list provided. Doubles are prevented.%0a%3c (:markupend:)%0a\ No newline at end of file%0a
host:1369684831=127.0.0.1
